<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDescription" xml:space="preserve">
    <value>UWP_FileSliceAndMerge_Prism</value>
    <comment>Application description</comment>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>UWP_FileSliceAndMerge_Prism</value>
    <comment>Application display name</comment>
  </data>
  <data name="BinaryFileMergePage_OpenExportFolderButton.Content" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="BinaryFileMergePage_SelectFilesButton.Content" xml:space="preserve">
    <value>选择文件</value>
  </data>
  <data name="BinaryFileMergePage_SelectOutputPathButton.Content" xml:space="preserve">
    <value>输出路径</value>
  </data>
  <data name="BinaryFileMergePage_SourceClearButton.Content" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="BinaryFileMergePage_StartButton.Content" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="BinaryFileSplitPage_OpenExportFolderButton.Content" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="BinaryFileSplitPage_RadioButton_IndexStartWith0.Content" xml:space="preserve">
    <value>序号起始值为0</value>
  </data>
  <data name="BinaryFileSplitPage_RadioButton_IndexStartWith1.Content" xml:space="preserve">
    <value>序号起始值为1</value>
  </data>
  <data name="BinaryFileSplitPage_RadioButton_SetSliceNumber.Content" xml:space="preserve">
    <value>指定切片数量</value>
  </data>
  <data name="BinaryFileSplitPage_RadioButton_SetSliceSize.Content" xml:space="preserve">
    <value>指定切片大小</value>
  </data>
  <data name="BinaryFileSplitPage_SelectFilesButton.Content" xml:space="preserve">
    <value>选择文件</value>
  </data>
  <data name="BinaryFileSplitPage_SelectFilesButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>选择想要切分的文件（支持多选）</value>
  </data>
  <data name="BinaryFileSplitPage_SelectOutputPathButton.Content" xml:space="preserve">
    <value>输出路径</value>
  </data>
  <data name="BinaryFileSplitPage_SelectOutputPathButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>选择切片文件输出的路径文件夹</value>
  </data>
  <data name="BinaryFileSplitPage_SourceClearButton.Content" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="BinaryFileSplitPage_SourceClearButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>清除待切分的原文件</value>
  </data>
  <data name="BinaryFileSplitPage_StartButton.Content" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="BinaryFileSplitPage_TextBlock_SetSliceName.Text" xml:space="preserve">
    <value>切片命名规则</value>
  </data>
  <data name="BinaryFileSplitPage_TextBlock_SplitMethod.Text" xml:space="preserve">
    <value>切分方法</value>
  </data>
  <data name="Datagrid_Column_FileName.Header" xml:space="preserve">
    <value>文件名称</value>
  </data>
  <data name="Datagrid_Column_FileSize.Header" xml:space="preserve">
    <value>文件大小（字节）</value>
  </data>
  <data name="FirstRunDialog.PrimaryButtonText" xml:space="preserve">
    <value>Ok</value>
    <comment>First use prompt message primary button text</comment>
  </data>
  <data name="FirstRunDialog.Title" xml:space="preserve">
    <value>Welcome</value>
    <comment>First use prompt message title</comment>
  </data>
  <data name="FirstRun_Body.Text" xml:space="preserve">
    <value>Replace the content of this dialog with whatever content is appropriate to your app.
You might want to explain key features or functionality.
Don't feel restricted to just text. You can also include images and animations if you wish too.

Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Maecenas porttitor congue massa. Fusce posuere, magna sed pulvinar ultricies, purus lectus malesuada libero, sit amet commodo magna eros quis urna.

Nunc viverra imperdiet enim. Fusce est. Vivamus a tellus.

Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Proin pharetra nonummy pede. Mauris et orci.

Suspendisse dui purus, scelerisque at, vulputate vitae, pretium mattis, nunc. Mauris eget neque at sem venenatis eleifend. Ut nonummy.</value>
    <comment>First use prompt message body</comment>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>关于此应用</value>
    <comment>About this application title for Settings</comment>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>Settings page placeholder text.  Your app description goes here.</value>
    <comment>About this application description for Settings</comment>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>个性化</value>
    <comment>Personalization text for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Privacy Statement</value>
    <comment>Privacy Statement link content for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://YourPrivacyUrlGoesHere/</value>
    <comment>Here is your Privacy Statement url for Settings</comment>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>选择主题</value>
    <comment>Choose theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>深色</value>
    <comment>Dark theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Windows 默认</value>
    <comment>Windows default theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>浅色</value>
    <comment>Light theme text for Settings</comment>
  </data>
  <data name="Shell_Main.Content" xml:space="preserve">
    <value>主页</value>
    <comment>Navigation view item name for Main</comment>
  </data>
  <data name="Shell_TabbedPivot.Content" xml:space="preserve">
    <value>二进制文件处理</value>
    <comment>Navigation view item name for TabbedPivot</comment>
  </data>
  <data name="TabbedPivot_PivotItem1.Header" xml:space="preserve">
    <value>文件切分</value>
    <comment>First Pivot item title for TabbedPivot</comment>
  </data>
  <data name="TabbedPivot_PivotItem2.Header" xml:space="preserve">
    <value>文件合并</value>
    <comment>Second Pivot item title for TabbedPivot</comment>
  </data>
  <data name="ToggleSwitch_CustomizeExtention.OffContent" xml:space="preserve">
    <value>自定义文件扩展名</value>
  </data>
  <data name="ToggleSwitch_CustomizeExtention.OnContent" xml:space="preserve">
    <value>自定义文件扩展名</value>
  </data>
  <data name="ToggleSwitch_SaveAsDefault.OffContent" xml:space="preserve">
    <value>保存为默认值</value>
  </data>
  <data name="ToggleSwitch_SaveAsDefault.OnContent" xml:space="preserve">
    <value>保存为默认值</value>
  </data>
</root>